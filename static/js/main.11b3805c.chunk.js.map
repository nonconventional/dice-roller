{"version":3,"sources":["Header.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","AppBar_default","position","color","Toolbar_default","Typography_default","variant","App","state","diceRolls","numDice","numSides","handleChange","event","_event$target","target","name","value","_this","setState","Object","defineProperty","handleRollClick","preventDefault","_this$state","i","diceRoll","Math","floor","random","push","handleClearClick","_this$state2","this","classes","total","Fragment","CssBaseline_default","className","root","src_Header","content","appBarSpacer","Paper_default","paper","Grid_default","container","spacing","item","xs","TextField_default","textField","fullWidth","helperText","id","label","onChange","required","select","MenuItem_default","inputProps","max","min","type","Button_default","button","onClick","length","map","index","iterm","Component","withStyles","theme","margin","unit","display","flexGrow","width","marginLeft","marginRight","breakpoints","up","marginTop","marginBottom","padding","textAlign","mixins","toolbar","selectEmpty","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.11b3805c.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst Header = props => {\n  return (\n    <AppBar position=\"absolute\" color=\"default\">\n      <Toolbar>\n        <Typography variant=\"h6\" color=\"inherit\">\n          Dice Roller\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport Header from './Header';\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing.unit,\n  },\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n  },\n  content: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3,\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    [theme.breakpoints.up(600 + theme.spacing.unit * 3 * 2)]: {\n      marginTop: theme.spacing.unit * 6,\n      marginBottom: theme.spacing.unit * 6,\n      padding: theme.spacing.unit * 3,\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  textField: {\n    margin: theme.spacing.unit,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2,\n  },\n});\n\nclass App extends Component {\n  state = {\n    diceRolls: [],\n    numDice: 1,\n    numSides: 0,\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleRollClick = event => {\n    event.preventDefault();\n\n    const { numDice, numSides } = this.state;\n    let diceRolls = [];\n\n    for (let i = 0; i < numDice; i++) {\n      const diceRoll = Math.floor(Math.random() * numSides) + 1;\n      diceRolls.push(diceRoll);\n    }\n\n    this.setState({ diceRolls });\n  };\n\n  handleClearClick = event => {\n    event.preventDefault();\n\n    this.setState({ diceRolls: [] });\n  };\n\n  render() {\n    const { numDice, numSides, diceRolls } = this.state;\n    const { classes } = this.props;\n\n    let total = 0;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <div className={classes.root}>\n          <Header />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Paper className={classes.paper}>\n              <form>\n                <Grid container spacing={8}>\n                  <Grid item xs={6}>\n                    <TextField\n                      className={classes.textField}\n                      fullWidth\n                      helperText=\"Select the Type of Dice\"\n                      id=\"num-sides\"\n                      label=\"Dice Type\"\n                      name=\"numSides\"\n                      onChange={this.handleChange}\n                      required\n                      select\n                      value={numSides}\n                    >\n                      <MenuItem value={0}>\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={4}>D4</MenuItem>\n                      <MenuItem value={6}>D6</MenuItem>\n                      <MenuItem value={8}>D8</MenuItem>\n                      <MenuItem value={10}>D10</MenuItem>\n                      <MenuItem value={12}>D12</MenuItem>\n                      <MenuItem value={20}>D20</MenuItem>\n                      <MenuItem value={100}>D100</MenuItem>\n                    </TextField>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      className={classes.textField}\n                      fullWidth\n                      id=\"num-dice\"\n                      inputProps={{\n                        max: '10000',\n                        min: '1',\n                      }}\n                      label=\"Number of Dice\"\n                      name=\"numDice\"\n                      onChange={this.handleChange}\n                      required\n                      type=\"number\"\n                      value={numDice}\n                    />\n                  </Grid>\n                  <Grid item xs>\n                    <Button\n                      className={classes.button}\n                      color=\"primary\"\n                      onClick={this.handleRollClick}\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      {'Roll the Dice! 😊'}\n                    </Button>\n                    <Button\n                      className={classes.button}\n                      color=\"secondary\"\n                      onClick={this.handleClearClick}\n                      variant=\"contained\"\n                    >\n                      {'Clear previous rolls 😡'}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </form>\n            </Paper>\n\n            {diceRolls.length > 0 && (\n              <Paper className={classes.paper}>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <span>{'Here bee yar rollss!!!'}</span>\n                  </Grid>\n                  {diceRolls.map((diceRoll, index) => {\n                    total += diceRoll;\n                    return (\n                      <Grid iterm xs={12}>\n                        <span>\n                          {'Dice Roll #' + (index + 1) + ': ' + diceRoll}\n                        </span>\n                        <br />\n                      </Grid>\n                    );\n                  })}\n                  <Grid item xs={12}>\n                    <span>\n                      <strong>{'Total: ' + total}</strong>\n                    </span>\n                  </Grid>\n                </Grid>\n              </Paper>\n            )}\n          </main>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}